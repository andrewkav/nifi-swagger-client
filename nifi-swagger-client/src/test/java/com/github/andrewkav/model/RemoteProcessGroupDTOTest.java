/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.9.2
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.andrewkav.model;

import com.github.andrewkav.model.PositionDTO;
import com.github.andrewkav.model.RemoteProcessGroupContentsDTO;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for RemoteProcessGroupDTO
 */
public class RemoteProcessGroupDTOTest {
    private final RemoteProcessGroupDTO model = new RemoteProcessGroupDTO();

    /**
     * Model tests for RemoteProcessGroupDTO
     */
    @Test
    public void testRemoteProcessGroupDTO() {
        // TODO: test RemoteProcessGroupDTO
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'versionedComponentId'
     */
    @Test
    public void versionedComponentIdTest() {
        // TODO: test versionedComponentId
    }

    /**
     * Test the property 'parentGroupId'
     */
    @Test
    public void parentGroupIdTest() {
        // TODO: test parentGroupId
    }

    /**
     * Test the property 'position'
     */
    @Test
    public void positionTest() {
        // TODO: test position
    }

    /**
     * Test the property 'targetUri'
     */
    @Test
    public void targetUriTest() {
        // TODO: test targetUri
    }

    /**
     * Test the property 'targetUris'
     */
    @Test
    public void targetUrisTest() {
        // TODO: test targetUris
    }

    /**
     * Test the property 'targetSecure'
     */
    @Test
    public void targetSecureTest() {
        // TODO: test targetSecure
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'comments'
     */
    @Test
    public void commentsTest() {
        // TODO: test comments
    }

    /**
     * Test the property 'communicationsTimeout'
     */
    @Test
    public void communicationsTimeoutTest() {
        // TODO: test communicationsTimeout
    }

    /**
     * Test the property 'yieldDuration'
     */
    @Test
    public void yieldDurationTest() {
        // TODO: test yieldDuration
    }

    /**
     * Test the property 'transportProtocol'
     */
    @Test
    public void transportProtocolTest() {
        // TODO: test transportProtocol
    }

    /**
     * Test the property 'localNetworkInterface'
     */
    @Test
    public void localNetworkInterfaceTest() {
        // TODO: test localNetworkInterface
    }

    /**
     * Test the property 'proxyHost'
     */
    @Test
    public void proxyHostTest() {
        // TODO: test proxyHost
    }

    /**
     * Test the property 'proxyPort'
     */
    @Test
    public void proxyPortTest() {
        // TODO: test proxyPort
    }

    /**
     * Test the property 'proxyUser'
     */
    @Test
    public void proxyUserTest() {
        // TODO: test proxyUser
    }

    /**
     * Test the property 'proxyPassword'
     */
    @Test
    public void proxyPasswordTest() {
        // TODO: test proxyPassword
    }

    /**
     * Test the property 'authorizationIssues'
     */
    @Test
    public void authorizationIssuesTest() {
        // TODO: test authorizationIssues
    }

    /**
     * Test the property 'validationErrors'
     */
    @Test
    public void validationErrorsTest() {
        // TODO: test validationErrors
    }

    /**
     * Test the property 'transmitting'
     */
    @Test
    public void transmittingTest() {
        // TODO: test transmitting
    }

    /**
     * Test the property 'inputPortCount'
     */
    @Test
    public void inputPortCountTest() {
        // TODO: test inputPortCount
    }

    /**
     * Test the property 'outputPortCount'
     */
    @Test
    public void outputPortCountTest() {
        // TODO: test outputPortCount
    }

    /**
     * Test the property 'activeRemoteInputPortCount'
     */
    @Test
    public void activeRemoteInputPortCountTest() {
        // TODO: test activeRemoteInputPortCount
    }

    /**
     * Test the property 'inactiveRemoteInputPortCount'
     */
    @Test
    public void inactiveRemoteInputPortCountTest() {
        // TODO: test inactiveRemoteInputPortCount
    }

    /**
     * Test the property 'activeRemoteOutputPortCount'
     */
    @Test
    public void activeRemoteOutputPortCountTest() {
        // TODO: test activeRemoteOutputPortCount
    }

    /**
     * Test the property 'inactiveRemoteOutputPortCount'
     */
    @Test
    public void inactiveRemoteOutputPortCountTest() {
        // TODO: test inactiveRemoteOutputPortCount
    }

    /**
     * Test the property 'flowRefreshed'
     */
    @Test
    public void flowRefreshedTest() {
        // TODO: test flowRefreshed
    }

    /**
     * Test the property 'contents'
     */
    @Test
    public void contentsTest() {
        // TODO: test contents
    }

}
