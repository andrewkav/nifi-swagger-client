/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.9.2
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.andrewkav.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ControllerStatusDTO
 */
public class ControllerStatusDTOTest {
    private final ControllerStatusDTO model = new ControllerStatusDTO();

    /**
     * Model tests for ControllerStatusDTO
     */
    @Test
    public void testControllerStatusDTO() {
        // TODO: test ControllerStatusDTO
    }

    /**
     * Test the property 'activeThreadCount'
     */
    @Test
    public void activeThreadCountTest() {
        // TODO: test activeThreadCount
    }

    /**
     * Test the property 'terminatedThreadCount'
     */
    @Test
    public void terminatedThreadCountTest() {
        // TODO: test terminatedThreadCount
    }

    /**
     * Test the property 'queued'
     */
    @Test
    public void queuedTest() {
        // TODO: test queued
    }

    /**
     * Test the property 'flowFilesQueued'
     */
    @Test
    public void flowFilesQueuedTest() {
        // TODO: test flowFilesQueued
    }

    /**
     * Test the property 'bytesQueued'
     */
    @Test
    public void bytesQueuedTest() {
        // TODO: test bytesQueued
    }

    /**
     * Test the property 'runningCount'
     */
    @Test
    public void runningCountTest() {
        // TODO: test runningCount
    }

    /**
     * Test the property 'stoppedCount'
     */
    @Test
    public void stoppedCountTest() {
        // TODO: test stoppedCount
    }

    /**
     * Test the property 'invalidCount'
     */
    @Test
    public void invalidCountTest() {
        // TODO: test invalidCount
    }

    /**
     * Test the property 'disabledCount'
     */
    @Test
    public void disabledCountTest() {
        // TODO: test disabledCount
    }

    /**
     * Test the property 'activeRemotePortCount'
     */
    @Test
    public void activeRemotePortCountTest() {
        // TODO: test activeRemotePortCount
    }

    /**
     * Test the property 'inactiveRemotePortCount'
     */
    @Test
    public void inactiveRemotePortCountTest() {
        // TODO: test inactiveRemotePortCount
    }

    /**
     * Test the property 'upToDateCount'
     */
    @Test
    public void upToDateCountTest() {
        // TODO: test upToDateCount
    }

    /**
     * Test the property 'locallyModifiedCount'
     */
    @Test
    public void locallyModifiedCountTest() {
        // TODO: test locallyModifiedCount
    }

    /**
     * Test the property 'staleCount'
     */
    @Test
    public void staleCountTest() {
        // TODO: test staleCount
    }

    /**
     * Test the property 'locallyModifiedAndStaleCount'
     */
    @Test
    public void locallyModifiedAndStaleCountTest() {
        // TODO: test locallyModifiedAndStaleCount
    }

    /**
     * Test the property 'syncFailureCount'
     */
    @Test
    public void syncFailureCountTest() {
        // TODO: test syncFailureCount
    }

}
