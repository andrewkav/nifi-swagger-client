/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.9.2
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.andrewkav.model;

import com.github.andrewkav.model.PortDTO;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ControllerDTO
 */
public class ControllerDTOTest {
    private final ControllerDTO model = new ControllerDTO();

    /**
     * Model tests for ControllerDTO
     */
    @Test
    public void testControllerDTO() {
        // TODO: test ControllerDTO
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'comments'
     */
    @Test
    public void commentsTest() {
        // TODO: test comments
    }

    /**
     * Test the property 'runningCount'
     */
    @Test
    public void runningCountTest() {
        // TODO: test runningCount
    }

    /**
     * Test the property 'stoppedCount'
     */
    @Test
    public void stoppedCountTest() {
        // TODO: test stoppedCount
    }

    /**
     * Test the property 'invalidCount'
     */
    @Test
    public void invalidCountTest() {
        // TODO: test invalidCount
    }

    /**
     * Test the property 'disabledCount'
     */
    @Test
    public void disabledCountTest() {
        // TODO: test disabledCount
    }

    /**
     * Test the property 'activeRemotePortCount'
     */
    @Test
    public void activeRemotePortCountTest() {
        // TODO: test activeRemotePortCount
    }

    /**
     * Test the property 'inactiveRemotePortCount'
     */
    @Test
    public void inactiveRemotePortCountTest() {
        // TODO: test inactiveRemotePortCount
    }

    /**
     * Test the property 'inputPortCount'
     */
    @Test
    public void inputPortCountTest() {
        // TODO: test inputPortCount
    }

    /**
     * Test the property 'outputPortCount'
     */
    @Test
    public void outputPortCountTest() {
        // TODO: test outputPortCount
    }

    /**
     * Test the property 'remoteSiteListeningPort'
     */
    @Test
    public void remoteSiteListeningPortTest() {
        // TODO: test remoteSiteListeningPort
    }

    /**
     * Test the property 'remoteSiteHttpListeningPort'
     */
    @Test
    public void remoteSiteHttpListeningPortTest() {
        // TODO: test remoteSiteHttpListeningPort
    }

    /**
     * Test the property 'siteToSiteSecure'
     */
    @Test
    public void siteToSiteSecureTest() {
        // TODO: test siteToSiteSecure
    }

    /**
     * Test the property 'instanceId'
     */
    @Test
    public void instanceIdTest() {
        // TODO: test instanceId
    }

    /**
     * Test the property 'inputPorts'
     */
    @Test
    public void inputPortsTest() {
        // TODO: test inputPorts
    }

    /**
     * Test the property 'outputPorts'
     */
    @Test
    public void outputPortsTest() {
        // TODO: test outputPorts
    }

}
