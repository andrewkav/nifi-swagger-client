/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.9.2
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.andrewkav.model;

import com.github.andrewkav.model.NodeEventDTO;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for NodeDTO
 */
public class NodeDTOTest {
    private final NodeDTO model = new NodeDTO();

    /**
     * Model tests for NodeDTO
     */
    @Test
    public void testNodeDTO() {
        // TODO: test NodeDTO
    }

    /**
     * Test the property 'nodeId'
     */
    @Test
    public void nodeIdTest() {
        // TODO: test nodeId
    }

    /**
     * Test the property 'address'
     */
    @Test
    public void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'apiPort'
     */
    @Test
    public void apiPortTest() {
        // TODO: test apiPort
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'heartbeat'
     */
    @Test
    public void heartbeatTest() {
        // TODO: test heartbeat
    }

    /**
     * Test the property 'connectionRequested'
     */
    @Test
    public void connectionRequestedTest() {
        // TODO: test connectionRequested
    }

    /**
     * Test the property 'roles'
     */
    @Test
    public void rolesTest() {
        // TODO: test roles
    }

    /**
     * Test the property 'activeThreadCount'
     */
    @Test
    public void activeThreadCountTest() {
        // TODO: test activeThreadCount
    }

    /**
     * Test the property 'queued'
     */
    @Test
    public void queuedTest() {
        // TODO: test queued
    }

    /**
     * Test the property 'events'
     */
    @Test
    public void eventsTest() {
        // TODO: test events
    }

    /**
     * Test the property 'nodeStartTime'
     */
    @Test
    public void nodeStartTimeTest() {
        // TODO: test nodeStartTime
    }

}
