/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.9.2
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.andrewkav.model;

import com.github.andrewkav.model.GarbageCollectionDTO;
import com.github.andrewkav.model.StorageUsageDTO;
import com.github.andrewkav.model.VersionInfoDTO;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for SystemDiagnosticsSnapshotDTO
 */
public class SystemDiagnosticsSnapshotDTOTest {
    private final SystemDiagnosticsSnapshotDTO model = new SystemDiagnosticsSnapshotDTO();

    /**
     * Model tests for SystemDiagnosticsSnapshotDTO
     */
    @Test
    public void testSystemDiagnosticsSnapshotDTO() {
        // TODO: test SystemDiagnosticsSnapshotDTO
    }

    /**
     * Test the property 'totalNonHeap'
     */
    @Test
    public void totalNonHeapTest() {
        // TODO: test totalNonHeap
    }

    /**
     * Test the property 'totalNonHeapBytes'
     */
    @Test
    public void totalNonHeapBytesTest() {
        // TODO: test totalNonHeapBytes
    }

    /**
     * Test the property 'usedNonHeap'
     */
    @Test
    public void usedNonHeapTest() {
        // TODO: test usedNonHeap
    }

    /**
     * Test the property 'usedNonHeapBytes'
     */
    @Test
    public void usedNonHeapBytesTest() {
        // TODO: test usedNonHeapBytes
    }

    /**
     * Test the property 'freeNonHeap'
     */
    @Test
    public void freeNonHeapTest() {
        // TODO: test freeNonHeap
    }

    /**
     * Test the property 'freeNonHeapBytes'
     */
    @Test
    public void freeNonHeapBytesTest() {
        // TODO: test freeNonHeapBytes
    }

    /**
     * Test the property 'maxNonHeap'
     */
    @Test
    public void maxNonHeapTest() {
        // TODO: test maxNonHeap
    }

    /**
     * Test the property 'maxNonHeapBytes'
     */
    @Test
    public void maxNonHeapBytesTest() {
        // TODO: test maxNonHeapBytes
    }

    /**
     * Test the property 'nonHeapUtilization'
     */
    @Test
    public void nonHeapUtilizationTest() {
        // TODO: test nonHeapUtilization
    }

    /**
     * Test the property 'totalHeap'
     */
    @Test
    public void totalHeapTest() {
        // TODO: test totalHeap
    }

    /**
     * Test the property 'totalHeapBytes'
     */
    @Test
    public void totalHeapBytesTest() {
        // TODO: test totalHeapBytes
    }

    /**
     * Test the property 'usedHeap'
     */
    @Test
    public void usedHeapTest() {
        // TODO: test usedHeap
    }

    /**
     * Test the property 'usedHeapBytes'
     */
    @Test
    public void usedHeapBytesTest() {
        // TODO: test usedHeapBytes
    }

    /**
     * Test the property 'freeHeap'
     */
    @Test
    public void freeHeapTest() {
        // TODO: test freeHeap
    }

    /**
     * Test the property 'freeHeapBytes'
     */
    @Test
    public void freeHeapBytesTest() {
        // TODO: test freeHeapBytes
    }

    /**
     * Test the property 'maxHeap'
     */
    @Test
    public void maxHeapTest() {
        // TODO: test maxHeap
    }

    /**
     * Test the property 'maxHeapBytes'
     */
    @Test
    public void maxHeapBytesTest() {
        // TODO: test maxHeapBytes
    }

    /**
     * Test the property 'heapUtilization'
     */
    @Test
    public void heapUtilizationTest() {
        // TODO: test heapUtilization
    }

    /**
     * Test the property 'availableProcessors'
     */
    @Test
    public void availableProcessorsTest() {
        // TODO: test availableProcessors
    }

    /**
     * Test the property 'processorLoadAverage'
     */
    @Test
    public void processorLoadAverageTest() {
        // TODO: test processorLoadAverage
    }

    /**
     * Test the property 'totalThreads'
     */
    @Test
    public void totalThreadsTest() {
        // TODO: test totalThreads
    }

    /**
     * Test the property 'daemonThreads'
     */
    @Test
    public void daemonThreadsTest() {
        // TODO: test daemonThreads
    }

    /**
     * Test the property 'uptime'
     */
    @Test
    public void uptimeTest() {
        // TODO: test uptime
    }

    /**
     * Test the property 'flowFileRepositoryStorageUsage'
     */
    @Test
    public void flowFileRepositoryStorageUsageTest() {
        // TODO: test flowFileRepositoryStorageUsage
    }

    /**
     * Test the property 'contentRepositoryStorageUsage'
     */
    @Test
    public void contentRepositoryStorageUsageTest() {
        // TODO: test contentRepositoryStorageUsage
    }

    /**
     * Test the property 'provenanceRepositoryStorageUsage'
     */
    @Test
    public void provenanceRepositoryStorageUsageTest() {
        // TODO: test provenanceRepositoryStorageUsage
    }

    /**
     * Test the property 'garbageCollection'
     */
    @Test
    public void garbageCollectionTest() {
        // TODO: test garbageCollection
    }

    /**
     * Test the property 'statsLastRefreshed'
     */
    @Test
    public void statsLastRefreshedTest() {
        // TODO: test statsLastRefreshed
    }

    /**
     * Test the property 'versionInfo'
     */
    @Test
    public void versionInfoTest() {
        // TODO: test versionInfo
    }

}
