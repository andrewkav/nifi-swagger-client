/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.9.2
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.andrewkav.model;

import com.github.andrewkav.model.PropertyDescriptorDTO;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ProcessorConfigDTO
 */
public class ProcessorConfigDTOTest {
    private final ProcessorConfigDTO model = new ProcessorConfigDTO();

    /**
     * Model tests for ProcessorConfigDTO
     */
    @Test
    public void testProcessorConfigDTO() {
        // TODO: test ProcessorConfigDTO
    }

    /**
     * Test the property 'properties'
     */
    @Test
    public void propertiesTest() {
        // TODO: test properties
    }

    /**
     * Test the property 'descriptors'
     */
    @Test
    public void descriptorsTest() {
        // TODO: test descriptors
    }

    /**
     * Test the property 'schedulingPeriod'
     */
    @Test
    public void schedulingPeriodTest() {
        // TODO: test schedulingPeriod
    }

    /**
     * Test the property 'schedulingStrategy'
     */
    @Test
    public void schedulingStrategyTest() {
        // TODO: test schedulingStrategy
    }

    /**
     * Test the property 'executionNode'
     */
    @Test
    public void executionNodeTest() {
        // TODO: test executionNode
    }

    /**
     * Test the property 'penaltyDuration'
     */
    @Test
    public void penaltyDurationTest() {
        // TODO: test penaltyDuration
    }

    /**
     * Test the property 'yieldDuration'
     */
    @Test
    public void yieldDurationTest() {
        // TODO: test yieldDuration
    }

    /**
     * Test the property 'bulletinLevel'
     */
    @Test
    public void bulletinLevelTest() {
        // TODO: test bulletinLevel
    }

    /**
     * Test the property 'runDurationMillis'
     */
    @Test
    public void runDurationMillisTest() {
        // TODO: test runDurationMillis
    }

    /**
     * Test the property 'concurrentlySchedulableTaskCount'
     */
    @Test
    public void concurrentlySchedulableTaskCountTest() {
        // TODO: test concurrentlySchedulableTaskCount
    }

    /**
     * Test the property 'autoTerminatedRelationships'
     */
    @Test
    public void autoTerminatedRelationshipsTest() {
        // TODO: test autoTerminatedRelationships
    }

    /**
     * Test the property 'comments'
     */
    @Test
    public void commentsTest() {
        // TODO: test comments
    }

    /**
     * Test the property 'customUiUrl'
     */
    @Test
    public void customUiUrlTest() {
        // TODO: test customUiUrl
    }

    /**
     * Test the property 'lossTolerant'
     */
    @Test
    public void lossTolerantTest() {
        // TODO: test lossTolerant
    }

    /**
     * Test the property 'annotationData'
     */
    @Test
    public void annotationDataTest() {
        // TODO: test annotationData
    }

    /**
     * Test the property 'defaultConcurrentTasks'
     */
    @Test
    public void defaultConcurrentTasksTest() {
        // TODO: test defaultConcurrentTasks
    }

    /**
     * Test the property 'defaultSchedulingPeriod'
     */
    @Test
    public void defaultSchedulingPeriodTest() {
        // TODO: test defaultSchedulingPeriod
    }

}
